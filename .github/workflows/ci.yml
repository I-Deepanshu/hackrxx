name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: hackrx
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          
      - name: Create pytest.ini
        run: |
          echo "[pytest]" > pytest.ini
          echo "pythonpath = ." >> pytest.ini
          echo "testpaths = tests" >> pytest.ini
          
      - name: Wait for Postgres
        run: |
          while ! pg_isready -h localhost -p 5432 -U user; do sleep 1; done
          
      - name: Run tests
        env:
          DATABASE_URL: postgresql://user:pass@localhost:5432/hackrx
          PYTHONPATH: ${{ github.workspace }}
          # Add mock values for required settings
          PINECONE_API_KEY: "test-api-key"
          PINECONE_ENVIRONMENT: "test-env"
          PINECONE_INDEX_NAME: "test-index"
          HACKRX_TEAM_TOKEN: "test-token"
          MAX_CHUNK_TOKENS: "500"
          GROQ_API_KEY: "test-groq-key"
          GROQ_MODEL: "test-model"
        run: pytest -v
